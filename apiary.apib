FORMAT: 1A
HOST: http://www.google.com

# Beacon Wallet API

Some resources required authentication of the user. For these requests the client must 
use the basic authentication headers according to http://tools.ietf.org/html/rfc1945#section-11.1. 
The username is the Supercard number and the password is the pin code.

# Group iPhone API
The following API calls are for the iPhone App. They require user authentication as
the access personal account information.

## Account [/accounts/{card}]

Each account is identified by a Supercard number and contains the credit 
card information of the user for direct payment.

| Field        | Type   | Description                             |
|:-------------|:-------|:----------------------------------------|
| card         | string | Supercard number                        |
| cc_nr        | string | Credit card number                      |
| cc_date      | string | Expiry date of credit card              |
| cc_ccv       | string | CCV code of creditcard                  |

+ Parameters
    + card (string, `2501032235098`) ... Supercard number

### Get account data by Supercard number [GET]

+ Request (application/json)
    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Body

            {}

+ Response 200 (application/json)
    + Body

            {
                "card": "2501032235098",
                "cc_nr":"510143256345234",
                "cc_date":"08-15"
            }

### Update an account, add credit card details [PUT]

+ Request (application/json)

    + Body

            {
                "pin":"1234",
                "cc_nr":"510143256345234",
                "cc_date":"08-15",
                "cc_ccv":"521"
            }

+ Response 200 (application/json)
    + Body

            {
                "card": "2501032235098",
                "cc_nr":"510143256345234",
                "cc_date":"08-15"
            }

## Product Collection [/products]

List of all product IDs. This resource is used in combination
with the product detail request to get all information about 
products.

### Get all products [GET]
+ Response 200 (application/json)
    + Body

            {
                "products": [
                    {
                        "id": 37
                    },
                    {
                        "id": 53285
                    }
                ]
            }

## Product [/products/{id}]

Get full product data. Use the `If-Modified-Since` header 
to avoid unnecessary data being sent over the network.

+ Parameters
    + id (number) ... Product ID

### Get a specific product [GET]

+ Request

    + Headers
    
            If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT

+ Response 200 (application/json)

    + Headers

            Last-Modified: Sat, 29 Oct 1994 19:43:31 GMT

    + Body

            {
                "id": "37",
                "name": "Barilla Spaghetti No.5",
                "price": "2.10",
                "info": [
                    {
                        "name": "Herkunft",
                        "value": "Produktionsland Italien"
                    },
                    {
                        "name": "Zusammensetzung",
                        "value": "Hartweizengriess, Wasser."
                    },
                    {
                        "name": "Verwendung",
                        "value": "Italienische Teigwaren (Spaghetti) aus Hartweizengriess, Kochzeit 8 Minuten. Zubereitung: Pro 100g Teigwaren 1 Liter Kochwasser verwenden. Salz in kochendes Wasser geben (10g\/l), Pasta hinzugeben, gelegentlich umr\u00fchren. Beim Abgiessen Wasser nicht vollst\u00e4ndig abgiessen."
                    }
                ],
                "barcodes": [
                    "8076800195057"
                ]
            }

+ Response 304

# Group iPad API

These API resources are used by the POS iPad to checkout in the store.
The authentication is encrypted in the request body.

## Transaction [/transactions]

To create a new transaction the cart is sent to the server.

The request is an encrypted JSON string in Base64 and the response
also includes a signature in Base64. The following code shows the pure 
JSON of the cart request and the transaction response for better 
understanding.

### Cart request JSON

```
{
    "card": "2501032235098",
    "products": [
        {"id": 123, "quantity": 2},
        {"id": 456, "quantity": 1}
    ]
}
```

### Transaction response JSON

```
{
    "id": 123,
    "status": "pending",
    "card": "2501032235098",
    "amount": 123.35,
    "products": [
        {"id": 123, "quantity": 2, "amount": 50},
        {"id": 456, "quantity": 1, "amount": 23.35}
    ]
}
```

### Create a new transaction [POST]

+ Request (application/x-www-form-urlencoded; charset=utf-8)

        cart=Y2FydA%3D%3D

+ Response 200 (application/json)

        {
            "transaction": "{\"id\": 123,\"status\": \"pending\",\"card\": \"2501032235098\",\"amount\": 123.35,\"products\": [{\"id\": 123, \"quantity\": 2, \"amount\": 50},{\"id\": 456, \"quantity\": 1, \"amount\": 23.35}]}",
            "signature": "LAIFtnO8J0qYY3C0lBZG9REtTPi+1"
        }

## Payment [/transactions/payment]

A transaction gets payed by sending the card and the PIN to the server.

The request is an encrypted JSON string in Base64 and the response
also includes a signature in Base64. The following code shows the pure 
JSON of the payment request and the transaction response for better 
understanding.


### Payment request JSON

```
{
    "id": 123,
    "card": "2501032235098",
    "pin": "1234"
}
```

### Transaction response JSON

```
{
    "id": 123,
    "status": "complete",
    "card": "2501032235098",
    "amount": 123.35,
    "products": [
        {"id": 123, "quantity": 2, "amount": 50},
        {"id": 456, "quantity": 1, "amount": 23.35}
    ]
}
```

### Confirm payment [POST]

+ Request (application/x-www-form-urlencoded; charset=utf-8)

        payment=Y2FydA%3D%3D

+ Response 200 (application/json)

        {
            "transaction": "{\"id\": 123,\"status\": \"complete\",\"card\": \"2501032235098\",\"amount\": 123.35,\"products\": [{\"id\": 123, \"quantity\": 2, \"amount\": 50},{\"id\": 456, \"quantity\": 1, \"amount\": 23.35}]}",
            "signature": "LAIFtnO8J0qYY3C0lBZG9REtTPi+1"
        }



